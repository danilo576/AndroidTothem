import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('release-keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdk = 36
    defaultConfig {
        applicationId "com.fashiontothem.ff"
        targetSdkVersion 36
        minSdkVersion 21
        versionCode 128
        versionName "2.2.9"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        
        // OAuth1 Credentials from gradle.properties
        buildConfigField("String", "OAUTH_CONSUMER_KEY", "\"${project.findProperty('OAUTH_CONSUMER_KEY') ?: ''}\"")
        buildConfigField("String", "OAUTH_CONSUMER_SECRET", "\"${project.findProperty('OAUTH_CONSUMER_SECRET') ?: ''}\"")
        buildConfigField("String", "OAUTH_ACCESS_TOKEN", "\"${project.findProperty('OAUTH_ACCESS_TOKEN') ?: ''}\"")
        buildConfigField("String", "OAUTH_TOKEN_SECRET", "\"${project.findProperty('OAUTH_TOKEN_SECRET') ?: ''}\"")
        
        // Athena Search API Credentials
        buildConfigField("String", "ATHENA_CLIENT_ID", "\"${project.findProperty('ATHENA_CLIENT_ID') ?: ''}\"")
        buildConfigField("String", "ATHENA_CLIENT_SECRET", "\"${project.findProperty('ATHENA_CLIENT_SECRET') ?: ''}\"")
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        customDebugType {
            debuggable false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //ndk.debugSymbolLevel = 'FULL'

            debuggable false
            jniDebuggable false
        }
        debug {
            debuggable true
            jniDebuggable true
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = '1.8'
    }
    
    buildFeatures {
        compose = true
        buildConfig = true  // Enable BuildConfig for OAuth credentials
    }
    
    composeOptions {
        kotlinCompilerExtensionVersion = '1.5.8'
    }
    
    // TODO silences:
    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
        if (variant.getBuildType().isMinifyEnabled()) {
            variant.assemble.doLast {
                copy {
                    from variant.mappingFile
                    into "${rootDir}/proguardTools"
                    rename { String fileName ->
                        "mapping-${variant.name}.txt"
                    }
                }
            }
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/libUvc_Support/CMakeLists.txt"
        }
    }

    packagingOptions {
        pickFirst 'lib/x86_64/libUvc_Support.so'
        pickFirst 'lib/armeabi/libUvc_Support.so'
        pickFirst 'lib/x86/libUvc_Support.so'
        pickFirst 'lib/armeabi-v7a/libUvc_Support.so'
        pickFirst 'lib/arm64-v8a/libUvc_Support.so'

        pickFirst 'lib/x86_64/libusb1.0.so'
        pickFirst 'lib/armeabi/libusb1.0.so'
        pickFirst 'lib/x86/libusb1.0.so'
        pickFirst 'lib/armeabi-v7a/libusb1.0.so'
        pickFirst 'lib/arm64-v8a/libusb1.0.so'

        pickFirst 'lib/x86_64/libjpeg-turbo.so'
        pickFirst 'lib/armeabi/libjpeg-turbo.so'
        pickFirst 'lib/x86/libjpeg-turbo.so'
        pickFirst 'lib/armeabi-v7a/libjpeg-turbo.so'
        pickFirst 'lib/arm64-v8a/libjpeg-turbo.so'

        pickFirst 'lib/x86_64/libjpeg.so'
        pickFirst 'lib/armeabi/libjpeg.so'
        pickFirst 'lib/x86/libjpeg.so'
        pickFirst 'lib/armeabi-v7a/libjpeg.so'
        pickFirst 'lib/arm64-v8a/libjpeg.so'

        pickFirst 'lib/x86_64/libyuv.so'
        pickFirst 'lib/armeabi/libyuv.so'
        pickFirst 'lib/x86/libyuv.so'
        pickFirst 'lib/armeabi-v7a/libyuv.so'
        pickFirst 'lib/arm64-v8a/libyuv.so'

        pickFirst 'lib/x86_64/libuvc.so'
        pickFirst 'lib/armeabi/libuvc.so'
        pickFirst 'lib/x86/libuvc.so'
        pickFirst 'lib/armeabi-v7a/libuvc.so'
        pickFirst 'lib/arm64-v8a/libuvc.so'

        pickFirst 'lib/x86/libunrooted_android.so'
        pickFirst 'lib/armeabi/libunrooted_android.so'
        pickFirst 'lib/x86_64/libunrooted_android.so'
        pickFirst 'lib/armeabi-v7a/libunrooted_android.so'
        pickFirst 'lib/arm64-v8a/libunrooted_android.so'
    }
    namespace 'humer.UvcCamera'


}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    
    // Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.9.22'
    
    // AndroidX Core
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    
    // Jetpack Compose
    implementation platform('androidx.compose:compose-bom:2024.02.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    
    // Lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.7.0'
    
    // Hilt Dependency Injection
    implementation 'com.google.dagger:hilt-android:2.50'
    kapt 'com.google.dagger:hilt-android-compiler:2.50'
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'
    
    // Navigation
    implementation 'androidx.navigation:navigation-compose:2.7.6'
    
    // Retrofit for HTTP
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    
    // Moshi for JSON parsing
    implementation 'com.squareup.moshi:moshi:1.15.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.15.0'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.15.0'
    
    // Coil for image loading
    implementation 'io.coil-kt:coil-compose:2.5.0'
    
    // DataStore for preferences
    implementation 'androidx.datastore:datastore-preferences:1.0.0'
    
    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2024.02.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    
    // Legacy libs (still needed for camera functionality)
    implementation(name:'cfalertdialog-1.1.0', ext:'aar')
    implementation 'net.java.dev.jna:jna:5.14.0@aar'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'io.github.yavski:fab-speed-dial:1.0.7'
    
    // Support libraries converted to AndroidX via Jetifier
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.11.0'
}


// Removed old Support library version forcing - now using AndroidX

